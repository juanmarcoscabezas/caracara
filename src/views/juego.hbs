<div id="juego" class="container" style="margin-top: 40px">
    <div class="row text-center" v-if="!usuario.activo && !desconectado">
        <div class="col-sm-12">
            <div class="col-sm-6 mx-auto">
                <div class="input-group">
                    <input class="form-control" v-model="personaje.busqueda" type="text" placeholder="Ingrese su personaje">
                    <div class="input-group-prepend">
                       <button class="btn btn-primary" v-on:click="buscarPersonajes()">Buscar</button>
                    </div>
                </div>
            </div>
            <div v-if="personaje.imagen !== null" style="margin-top: 10px">
                <img v-bind:src="personaje.imagen" style="width: 200px; height: 250px">
            </div>
            <div v-if="personaje.imagen !== null" style="margin-top: 10px">
                <button class="btn btn-primary" v-on:click="seleccionarPersonaje()"> Listo</button>
            </div>
        </div>
    </div>
    <div class="row text-center" v-if="usuario.room">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-6">
                    <div style="width: 200px; margin: auto">
                        <h5 >Mi rival</h5>
                    </div>
                    <img id="imagenRival" v-if="rival.imagen !== null" v-bind:src="rival.imagen" style="width: 200px; height: 250px">
                    <img v-if="rival.imagen === null" style="width: 200px; height: 250px; background: black">
                </div>
                <div class="col-sm-6">
                    <div style="width: 200px; margin: auto">
                        <h5 >Mi personaje</h5>
                    </div>
                    <img v-bind:src="personaje.imagen" style="width: 200px; height: 250px">
                </div>
            </div>
            <div class="col-sm-6 mx-auto" style="margin-top: 10px">
                <div class="input-group" v-if="usuario.partida">
                    <input class="form-control" v-model="personaje.prediccion" v-bind:disabled="!usuario.turno  || !usuario.partida" type="text" placeholder="Ingrese predicción">
                    <div class="input-group-prepend">
                        <button class="btn btn-primary" v-on:click="enviarPrediccion()">Enviar</button>
                    </div>
                </div>
                <button v-if="!usuario.partida" class="btn btn-primary" disabled style="margin-top: 10px">
                    <span class="spinner-grow spinner-grow-sm"></span>
                    Esperando rival
                </button>
            </div>
        </div>
        <div class="col-sm-12 alert alert-success text-center" id="myAlert" style="display: none; margin-top: 20px">
            <strong>${alertText}</strong>
            <div>
                <button v-on:click="enviarRespuesta('si')" class="btn btn-success" style="width: 100px">Si</button>
                <button v-on:click="enviarRespuesta('tal vez')" class="btn btn-warning" style="width: 100px">Tal vez</button>
                <button v-on:click="enviarRespuesta('no')" class="btn btn-danger" style="width: 100px">No</button>
            </div>
        </div>
        <div class="col-sm-12 text-center" v-if="usuario.partida" style="margin-top: 20px">
            <h5>Mis preguntas</h5>
            <div v-for="(pregunta, index) in preguntas">
                <h6> ${index + 1} - ${pregunta.pregunta} </h6>
                <p> ${pregunta.respuesta} </p>
            </div>
        </div>
    </div>
    <div class="col-sm-12 alert alert-danger text-center" id="myAlertDanger" style="display: none; ">
        <strong>Tu rival se ha desconectado</strong>
        <div>
            <a href="/" class="btn btn-success" style="width: 100px">Aceptar</a>
        </div>
    </div>
</div>
<script>
    const socket = io();
    const juego = new Vue({
        delimiters: ['${', '}'],
        el: '#juego',
        data: {
            usuario: {
                id: null,
                username: null,
                room: null,
                activo: false,
                turno: false,
                partida: false,
            },
            personaje: {
                busqueda: '',
                imagen: null,
                prediccion: ''
            },
            preguntas: [],
            alertText: 'Texto inicial',
            desconectado: false,
            rival: {
                imagen: null,
                porcentaje: 0
            }
        },
        created: function() {

            $("#imagenRival").css("filter", `brightness(0.0)`);

            socket.on('juego.famoso.imagen', (data) => {
                this.personaje.imagen = data;
            });

            socket.on('juego.famoso.imagen.error', (data) => {

            });

            socket.on('juego.recibir.prediccion', (data) => {
                $("#myAlert").css("display", "block");
                this.alertText = data.prediccion;
            });

            socket.on('juego.recibir.prediccion.respuesta', (data) => {
                if(data.respuesta === 'si') {
                    this.rival.porcentaje += 0.01;
                    $("#imagenRival").css("filter", `brightness(${this.rival.porcentaje})`);
                }
               this.preguntas[this.preguntas.length - 1].respuesta = data.respuesta;  
               this.rival.imagen = data.imagen;
            });

            socket.on('juego.room.creado', (data) => {
                this.usuario.room = data.room;
                this.usuario.turno = data.turno;
                this.usuario.activo = data.activo;
            });

            socket.on('juego.enviar.imagen', (data) => {
                console.log(data);
            });

            socket.on('juego.partida.inicia', (data) => {
                this.usuario.partida = data;
            });

            socket.on('juego.fin.rival.desconectado', (data) => {
                if(data) {
                    $("#myAlertDanger").css("display", "block");
                    this.desconectado = true;
                    this.usuario.id = null;
                    this.usuario.username = null;
                    this.usuario.room = null;
                    this.usuario.activo = false;
                    this.usuario.turno = false;
                    this.usuario.partida = false;
                    this.personaje.busqueda = '';
                    this.personaje.imagen = null
                    this.personaje.prediccion = '';
                    this.preguntas = [];
                }
            });
        },
        methods: {
            buscarPersonajes: function() {
                const expReg = (/^([a-zA-Z]+\s)*[a-zA-Z]+$/);
                const busquedaValida = expReg.test(this.personaje.busqueda.trim());
                if(busquedaValida) {
                    const arrayBusqueda = this.personaje.busqueda.trim().toLowerCase().split(' ');
                    let busquedaRefactorizada = ''
                    for(busqueda of arrayBusqueda) {
                        busquedaRefactorizada += busqueda.charAt(0).toUpperCase() + busqueda.slice(1) + ' ';
                    }
                    socket.emit('juego.famoso.buscar', busquedaRefactorizada.trim());
                } else {
                    this.alertText = 'Ingresa un personaje válido';
                    $("#myAlert").alert();
                }
            },
            enviarPrediccion: function() {
                if(this.personaje.prediccion.trim() !== '') {
                    socket.emit('juego.enviar.prediccion', {
                        room: this.usuario.room,
                        prediccion: this.personaje.prediccion
                    });
                    this.preguntas.push({pregunta: this.personaje.prediccion, respuesta: ''});
                    this.personaje.prediccion = '';
                    this.usuario.turno = false;
                }
            },
            seleccionarPersonaje: function() {
                socket.emit('juego.iniciar', {
                    imagen: this.personaje.imagen
                });
            },
            closeAlert: function(){
                $("#myAlert").alert("close");
                this.alertText = '';
            },
            enviarRespuesta: function(respuesta){
                socket.emit('juego.enviar.prediccion.respuesta', {
                    room: this.usuario.room,
                    respuesta: respuesta,
                    imagen: this.personaje.imagen
                });
                this.usuario.turno = true;
                $("#myAlert").css("display", "none");
            }
        }
    });
</script>